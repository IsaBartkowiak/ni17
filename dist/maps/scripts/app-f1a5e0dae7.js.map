{"version":3,"sources":["scripts/app.js"],"names":["angular","module","navbar","NavbarController","$rootScope","$state","notification","auth","init","vm","notificationsCount","get","id","user","data","notifications","forEach","value","key","seen","readNotif","read","status","logout","go","this","currentState","current","name","currentUser","notifPanel","$inject","directive","restrict","templateUrl","controller","scope","bloctitle","subtitle","controllerAs","bindToController","relativeDate","moment","date","startOf","fromNow","filter","myParticipation","items","filtered","length","ev","slots","slot","users","indexOf","push","cleanDate","format","compareTo","CompareTo","$scope","element","attributes","ngModel","$validators","modelValue","otherModelValue","$validate","$watch","require","link","ProfileCtrl","$timeout","toastr","event","saveChanges","form","console","log","$valid","update","success","error","context","newPassword","confirmNewPassword","MainController","participations","activate","getAll","events","removeUserParticipation","userid","res","index","getIndexOf","splice","showAll","activeTab","showUser","owner","showParticipations","showDone","closed","containsObject","obj","array","i","bodyClass","RegisterController","createAccount","register","then","LoginController","authentificate","login","email","password","SingleEventController","$mdDialog","$document","$stateParams","addUserParticipation","slotId","userId","create","content","lastname","title","type","UserId","EditEventController","dates","toString","field","fieldCount","addField","removeField","updateEvent","deleteEvent","confirm","parent","document","querySelector","clickOutsideToClose","textContent","ariaLabel","targetEvent","ok","cancel","show","CloseEventController","tmp","recommandation","showHelp","changeSelection","selection","closeEvent","modal","Object","keys","close","notifyUsers","EventController","addEvent","userService","$resource","method","withCredentials","isArray","params","delete","url","loggedin","factory","slotService","participationsService","notificationService","eventService","authService","$q","getUser","isLoggedIn","deferred","defer","biography","bio","resolve","reject","promise","err","runBlock","$log","$on","toState","toParams","fromState","fromParams","run","routerConfig","$stateProvider","$urlRouterProvider","$locationProvider","state","otherwise","html5Mode","config","constant","$logProvider","toastrConfig","$mdDateLocaleProvider","debugEnabled","locale","timeOut","showDuration","positionClass","newestOnTop","$templateCache","put"],"mappings":"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","file":"scripts/app-f1a5e0dae7.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('events', ['ngAnimate', 'ngCookies', 'ngTouch', 'ngSanitize', 'ngMessages', 'ngAria', 'ngResource', 'ui.router', 'ngMaterial', 'toastr', 'ngMaterialDatePicker']);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .directive('navbar', navbar);\n\n  /** @ngInject */\n  function navbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      controller: NavbarController,\n      scope: {\n        bloctitle: '=',\n        subtitle: '='\n      },\n      controllerAs: 'nav',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController($rootScope, $state, notification, auth) {\n      var vm = this;\n      vm.currentState = $state.current.name;\n      vm.user = $rootScope.currentUser;\n      vm.notifications = [];\n      vm.notificationsCount = 0;\n      vm.readNotif = readNotif;\n      vm.notifPanel = false;\n      vm.logout = logout;\n      \n      init();\n\n      function init() {\n        vm.notificationsCount = 0;\n        notification.get({id: vm.user.id}, function(data){\n          vm.notifications = data;\n          angular.forEach(vm.notifications, function(value, key) {\n            if(value.seen == false){\n              vm.notificationsCount++;\n            }\n          });\n        });\n      }\n      \n      function readNotif(id){\n        notification.read({id: id}, {}, function(data){\n          if(data.status == 'success'){\n            init();\n          }\n        });\n      }\n      \n      function logout(){\n        auth.logout();\n        $state.go(\"login\");\n      }\n      \n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .filter('relativeDate', relativeDate);\n\n  /** @ngInject */\n  function relativeDate(moment) {\n    return function(date) {\n      return moment(date).startOf(\"minute\").fromNow();\n\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .filter('myParticipation', myParticipation);\n\n  /** @ngInject */\n  function myParticipation($rootScope) {\n    return function(items) {\n      var filtered = [];\n      if(items.length){\n        angular.forEach(items, function(ev) {\n          angular.forEach(ev.slots, function(slot) {\n            angular.forEach(slot.users, function(user) {\n              if(user.id == $rootScope.currentUser.id && filtered.indexOf(ev) == -1) {\n                filtered.push(ev);\n              }\n            });\n          });\n        });\n      }\n      \n      return filtered;\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .filter('cleanDate', cleanDate);\n\n  /** @ngInject */\n  function cleanDate(moment) {\n    return function(date, format) {\n      return moment(date).format(format);\n    };\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .directive('compareTo', compareTo);\n\n  /** @ngInject */\n  function compareTo() {\n    var directive = {\n      restrict: 'A',\n      require: \"ngModel\",\n      link: CompareTo,\n      scope: {\n        otherModelValue: \"=compareTo\"\n    }\n};\n\nreturn directive;\n\n/** @ngInject */\nfunction CompareTo($scope, element, attributes, ngModel) {\n    \n    ngModel.$validators.compareTo = function(modelValue) {\n        return (modelValue == $scope.otherModelValue);\n    };  \n    ngModel.$validate();  \n    $scope.$watch(\"otherModelValue\", function() {\n        ngModel.$validate();\n    });\n}//fin CompareTo\n\n\n}//fin compareTo\n\n})();\n\n(function() {\n\t'use strict';\n\n\tangular\n\t.module('events')\n\t.controller('ProfileCtrl', ProfileCtrl);\n\n\t/** @ngInject */\n\tfunction ProfileCtrl($rootScope,$scope, $timeout, toastr, event, moment, users) {\n\n\t\t$rootScope.context = \"updateUser\";\n\t\tvar vm = this;\n\t\tvm.user = $rootScope.currentUser;\n\t\tvm.user.newPassword = \"\";\n\t\tvm.user.confirmNewPassword = \"\";\n\t\tvm.saveChanges = saveChanges;\n\n\t\tfunction saveChanges(form){\n\t\t\tconsole.log(form.$valid);\n\t\t\tif(form.$valid){\n\t\t\t\tusers.update({id: vm.user.id}, vm.user, function(data){\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\tif(data.status == 'success'){\n\t\t\t\t\t\ttoastr.success('Votre compte a bien été modifié', 'Succès');\n\t\t\t\t\t}else{\n\t\t\t\t\t\ttoastr.error('Une erreur est survenue', 'Oups');\t\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t}\n})();\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($rootScope, $timeout, $scope, toastr, event, moment, users, participations) {\n    var vm = this;\n    $rootScope.bodyClass = \"app\";\n    $rootScope.context = \"main\";\n    \n    vm.events = [];\n    vm.data = moment;\n    vm.filter = {};\n    vm.activeTab = \"all\";\n    vm.containsObject = containsObject;\n    vm.removeUserParticipation = removeUserParticipation;\n    vm.getIndexOf = getIndexOf;\n    vm.showAll = showAll;\n    vm.showUser = showUser;\n    vm.showDone = showDone;\n    vm.showParticipations = showParticipations;\n\n    activate();\n\n    function activate() {\n      event.getAll(function(data){\n        vm.events = data;\n      });\n    }\n    \n    function removeUserParticipation(slot){\n      participations.delete({id:slot.id, userid: $rootScope.currentUser.id}, function(res) {\n        if(res.status == \"success\"){\n          var index = vm.getIndexOf($rootScope.currentUser, slot.users);\n          slot.users.splice(index, 1);\n          toastr.success('Participation supprimée', 'Succès');\n        }\n      });\n    }\n    \n    function showAll(){\n      vm.filter = '';\n      vm.activeTab = \"all\";\n    }\n    \n    function showUser(){\n      vm.filter = {\"owner\":{\"id\":$rootScope.currentUser.id}};\n      vm.activeTab = \"user\";\n    }\n    \n    function showParticipations(){\n      vm.filter = \"main.myParticipation()\";\n      vm.activeTab = \"participation\";\n    }\n\n    function showDone(){\n      vm.filter = {closed:true};\n      vm.activeTab = \"done\";\n    }\n    \n    function containsObject(obj, array) {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].id === obj.id) {\n          return true;\n        }\n      }\n      return false;\n    }\n    \n    function getIndexOf(obj, array){\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].id === obj.id) {\n          return i;\n        }\n      }\n      return -1;\n    }\n\n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('RegisterController', RegisterController);\n\n  /** @ngInject */\n  function RegisterController($rootScope, $state, toastr, users, auth) {\n    var vm = this;\n    $rootScope.bodyClass = \"connexion\";\n\n    vm.user = {};\n    vm.createAccount = createAccount;\n\n    function createAccount() {\n      auth.register(vm.user)\n      .then(function(){\n        $state.go('home');\n        toastr.success('Bienvenue wesh :)', 'Ola!');\n      })\n      .catch(function(){\n        toastr.error('Une erreur est survenue', 'Oups');\n      });\n    }\n\n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('LoginController', LoginController);\n\n  /** @ngInject */\n  function LoginController($state, $rootScope, toastr, users, auth) {\n    var vm = this;\n    $rootScope.bodyClass = \"connexion\";\n\n    vm.email = \"\";\n    vm.password = \"\";\n    vm.authentificate = authentificate;\n\n    function authentificate() {\n      auth.login(vm.email, vm.password)\n      .then(function () {\n        toastr.success('Connexion réussie !', 'Succès');\n        $state.go(\"home\");\n      })\n      .catch(function () {\n        toastr.error('E-mail ou mot de passe invalide', 'Erreur');\n      });\n   \n    }\n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('SingleEventController', SingleEventController);\n\n  /** @ngInject */\n  function SingleEventController($rootScope, $mdDialog, $state, $document, $stateParams, notification, toastr, event, slot, participations) {\n    var vm = this;\n    vm.event = {};\n    vm.addUserParticipation = addUserParticipation;\n    vm.containsObject = containsObject;\n    vm.removeUserParticipation = removeUserParticipation;\n    vm.getIndexOf = getIndexOf;\n\n\n    init();\n\n    function init() {\n      event.get({id: $stateParams.id}, function(data){\n        vm.event = data;\n      });\n    }\n    \n    function addUserParticipation(slot){\n      if(!vm.containsObject($rootScope.currentUser, slot.users)){\n        var obj = {};\n        obj.slotId = slot.id;\n        obj.userId = $rootScope.currentUser.id;\n        participations.create({id:vm.event.id}, obj, function(res) {\n          if(res.status == \"success\"){\n            slot.users.push($rootScope.currentUser);\n            toastr.success('Participation enregistrée', 'Succès');\n            //ajout d'une notification\n            if(vm.event.owner.id != $rootScope.currentUser.id){\n              var obj = {};\n              obj.content = $rootScope.currentUser.name+\" \"+$rootScope.currentUser.lastname+\" participe à votre évènement \"+vm.event.title;\n              obj.type = 2;\n              obj.UserId = vm.event.owner.id;\n              notification.create(obj);\n            }\n          }\n        });\n      }else{\n        vm.removeUserParticipation(slot);\n      } \n    }\n    \n    function removeUserParticipation(slot){\n      participations.delete({id:slot.id, userid: $rootScope.currentUser.id}, function(res) {\n        if(res.status == \"success\"){\n          var index = vm.getIndexOf($rootScope.currentUser, slot.users);\n          slot.users.splice(index, 1);\n          toastr.success('Participation supprimée', 'Succès');\n          var obj = {};\n          obj.content = $rootScope.currentUser.name+\" \"+$rootScope.currentUser.lastname+\" s'est désinscrit de votre évènement \"+vm.event.title;\n          obj.type = 3;\n          obj.UserId = vm.event.owner.id;\n          notification.create(obj);\n        }\n      });\n    }\n    \n    function getIndexOf(obj, array){\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].id === obj.id) {\n          return i;\n        }\n      }\n      return -1;\n    }\n    \n    function containsObject(obj, array) {\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].id === obj.id) {\n          return true;\n        }\n      }\n      return false;\n    }\n    \n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('EditEventController', EditEventController);\n\n  /** @ngInject */\n  function EditEventController($rootScope, $stateParams, $timeout, $mdDialog, $state, toastr, event, slot) {\n    var vm = this;\n    vm.event = {};\n    vm.field = [];\n    vm.dates = [];\n    vm.fieldCount = 0;\n    vm.removeField = removeField;\n    vm.addField = addField;\n    vm.updateEvent = updateEvent;\n    vm.deleteEvent = deleteEvent;\n    \n    init();\n\n    function init() {\n      event.get({id: $stateParams.id}, function(data){\n        vm.event = data; \n        angular.forEach(data.slots, function(value, key) {\n          vm.dates[key] = {};\n          vm.dates[key].date = value.date.toString();\n          if(key > 0){\n            vm.field.push({id:key}); \n          }\n        });\n        vm.fieldCount = vm.dates.length;\n      });\n    }\n    \n    //ajoute un champ date (clic du +)\n    function addField() {\n      var field = {};\n      field.id = vm.fieldCount;\n      if(vm.field.length < 5){\n        vm.field.push(field);\n        vm.fieldCount++;\n      }\n    }\n    \n    //retire le champ date cliqué\n    function removeField(field) {\n      var index = vm.field.indexOf(field);\n      vm.field.splice(index, 1);\n      delete vm.dates[field.id];\n    }\n    \n    //A l'enregistrement\n    function updateEvent(form){\n      if(form.$valid){\n        event.update({id: $stateParams.id}, vm.event, function(data){\n          if(data.status == \"success\"){\n            angular.forEach(vm.dates, function(value) {\n              slot.create({id:data.id}, value);\n            });\n            toastr.success('Votre évènement a bien été modifié', 'Succès');\n            $timeout(function(){\n              $state.go(\"singleevent\", {\"id\":data.id});\n            }, 500);\n          }else{\n            toastr.error('Une erreur est survenue', 'Oups');\n          }\n        });\n      }\n    }\n    \n     //Suppression\n    function deleteEvent(ev){\n      var confirm = $mdDialog.confirm()\n      .title('Confirmer')\n      .parent(angular.element(document.querySelector('#editevent')))\n      .clickOutsideToClose(true)\n      .textContent('Etes-vous sûr de vouloir supprimer cet évènement ?')\n      .ariaLabel('confirm')\n      .targetEvent(ev)\n      .ok('Oui')\n      .cancel('Annuler');\n\n      $mdDialog.show(confirm).then(function() {\n        event.delete({id: $stateParams.id}, function(data){\n          if(data.status == \"success\"){\n            toastr.success('Votre évènement a bien été supprimé', 'Succès');\n            $state.go('home');\n          }else{\n            toastr.error('Une erreur est survenue', 'Oups');\n          }\n        });\n      });\n    }\n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('CloseEventController', CloseEventController);\n\n  /** @ngInject */\n  function CloseEventController($rootScope, $stateParams, $state, $mdDialog, notification, toastr, event) {\n    var vm = this;\n    vm.event = {};\n    vm.selection = {};\n    vm.recommandation = false;\n    vm.changeSelection = changeSelection;\n    vm.closeEvent = closeEvent;\n    vm.showHelp = false;\n    vm.notifyUsers = notifyUsers;\n    \n    init();\n\n    function init() {\n      event.get({id: $stateParams.id}, function(data){\n        vm.event = data;\n        var tmp = null;\n        /* on ne fait la recommandation que si il y a un nombre différent de participants (pas d'intéret sinon)\n        *  recommandation = on précoche une case\n        */\n        angular.forEach(data.slots, function(value) {\n          if(value.users.length != tmp && tmp != null){\n            vm.recommandation = true;\n            vm.showHelp = true;\n          }\n          tmp = value.users.length;\n        });\n      });\n    }\n    \n    function changeSelection(id){\n      vm.selection = {};\n      vm.selection[id] = true;\n    }\n    \n    function closeEvent(ev){\n\n      var modal = $mdDialog.confirm()\n      .title('Confirmer')\n      .parent(angular.element(document.querySelector('#closevent')))\n      .clickOutsideToClose(true)\n      .textContent('Etes-vous sûr de vouloir cloturer cet évènement ?')\n      .ariaLabel('confirm')\n      .targetEvent(ev)\n      .ok('Oui')\n      .cancel('Annuler');\n      \n      $mdDialog.show(modal).then(function() {\n        var obj = {id: Object.keys(vm.selection)[0]};\n        event.close({id: $stateParams.id}, obj, function(data){\n          if(data.status == \"success\"){\n            toastr.success('Votre évènement a bien été cloturé', 'Succès');\n            vm.notifyUsers();\n            $state.go(\"singleevent\", {\"id\":$stateParams.id});\n          }else{\n            toastr.error('Une erreur est survenue', 'Oups');\n          }\n        });\n      });\n    }\n    \n    \n    function notifyUsers(){\n      angular.forEach(vm.event.slots, function(slot) {\n        if(slot.users.length > 0){\n          angular.forEach(slot.users, function(user) {\n          var obj = {};\n          obj.content = \"L'évènement \"+vm.event.title+\" auquel vous avez participé a été cloturé !\";\n          obj.type = 1;\n          obj.UserId = user.id;\n          notification.create(obj);\n        });\n        }\n      });\n    }\n    \n    \n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .controller('EventController', EventController);\n\n  /** @ngInject */\n  function EventController($rootScope, $state, $timeout, toastr, event, slot) {\n    var vm = this;\n    $rootScope.context = \"add\";\n\n    vm.event = {};\n    vm.event.UserId = $rootScope.currentUser.id;\n    vm.field = [];\n    vm.fieldCount = 1;\n    vm.dates = {};\n    vm.addField = addField;\n    vm.removeField = removeField;\n    vm.addEvent = addEvent;\n\n    //ajoute un champ date (clic du +)\n    function addField() {\n      var date = {};\n      date.id = vm.fieldCount;\n      if(vm.field.length < 5){\n        vm.field.push(date);\n        vm.fieldCount++;\n      }\n    }\n    \n    //retire le champ date cliqué\n    function removeField(field) {\n      var index = vm.field.indexOf(field);\n      vm.field.splice(index, 1);\n      delete vm.dates[field.id];\n    }\n    \n    //A l'enregistrement\n    function addEvent(form){\n      if(form.$valid){\n        event.create(vm.event, function(data){\n          if(data.status == \"success\"){\n            angular.forEach(vm.dates, function(value) {\n              slot.create({id:data.id}, value);\n            });\n            $timeout(function(){\n              toastr.success('Votre évènement a bien été crée', 'Succès');\n              $state.go(\"singleevent\", {\"id\":data.id});\n            }, 500);\n\n          }else{\n            toastr.error('Une erreur est survenue', 'Oups');\n          }\n        });\n      }\n    }\n\n    \n  }\n})();\n\n(function () {\n   'use strict';\n\n   angular\n   .module('events')\n   .factory('users', userService);\n          \n    function userService($resource){\n          return $resource('https://wesh-app.herokuapp.com/api/users/', {}, {\n                create: { method: 'POST', withCredentials: true},\n                get: { method: 'GET', isArray: true, params:{id:'@id'} },\n                getAll: { method: 'GET', isArray: true},\n                delete: { method: 'DELETE', params:{id:'@id'} },\n                update: { \n                  method: 'PUT',\n                  params:{id:'@id'},\n                  url: 'https://wesh-app.herokuapp.com/api/users/:id'\n                },\n                login: { \n                  url: 'https://wesh-app.herokuapp.com/api/users/login/',\n                  method: 'POST',\n                  withCredentials: true\n                },\n                logout: { \n                  url: 'https://wesh-app.herokuapp.com/api/users/logout/',\n                  method: 'GET',\n                  withCredentials: true\n                },\n                loggedin: { \n                  url: 'https://wesh-app.herokuapp.com/api/users/loggedin/',\n                  method: 'GET',\n                  withCredentials: true}\n            });\n    }\n})();\n(function () {\n   'use strict';\n\n   angular\n   .module('events')\n   .factory('slot', slotService);\n          \n    function slotService($resource){\n          return $resource('https://wesh-app.herokuapp.com/api/events/:id/slots/', {}, {\n                create: { method: 'POST', params:{id:'@id'}},\n                update: { method: 'PUT', params:{id:'@id'}}\n            });\n    }\n})();\n\n(function () {\n   'use strict';\n\n   angular\n   .module('events')\n   .factory('participations', participationsService);\n          \n    function participationsService($resource){\n          return $resource('https://wesh-app.herokuapp.com/api/events/:id/participations/', {}, {\n                create: { method: 'POST', params:{id:'@id'}},\n                update: { method: 'PUT', params:{id:'@id', userid: '@userid'}},\n                delete: { method: 'DELETE', params:{id:'@id', userid: '@userid'}, url: 'https://wesh-app.herokuapp.com/api/participations/:id/user/:userid' }\n            });\n    }\n})();\n\n(function () {\n   'use strict';\n\n   angular\n   .module('events')\n   .factory('notification', notificationService);\n          \n    function notificationService($resource){\n          return $resource('https://wesh-app.herokuapp.com/api/notifications/', {}, {\n                create: { method: 'POST' },\n                get: { method: 'GET', params:{id:'@id'}, isArray: true, url: 'https://wesh-app.herokuapp.com/api/users/:id/notifications'},\n                read: { method: 'PUT', params:{id:'@id'}, url: 'https://wesh-app.herokuapp.com/api/notifications/:id'}\n            });\n    }\n})();\n\n\n(function () {\n   'use strict';\n\n   angular\n   .module('events')\n   .factory('event', eventService);\n          \n    function eventService($resource){\n          return $resource('https://wesh-app.herokuapp.com/api/events/', {}, {\n                create: { method: 'POST' },\n                get: { method: 'GET', params:{id:'@id'}, url: 'https://wesh-app.herokuapp.com/api/events/:id'},\n                getAll: { method: 'GET', isArray: true},\n                delete: { method: 'DELETE', params:{id:'@id'}, url: 'https://wesh-app.herokuapp.com/api/events/:id'},\n                update: { method: 'PUT', params:{id:'@id'}, url: 'https://wesh-app.herokuapp.com/api/events/:id'},\n                close: { method: 'PUT', params:{id:'@id'}, url: 'https://wesh-app.herokuapp.com/api/events/:id/close/'}\n            });\n    }\n})();\n\n\n(function () {\n 'use strict';\n\n angular\n .module('events')\n .factory('auth', authService);\n \n function authService($resource, $q, users){\n  var currentUser = {};\n  \n    function getUser(){\n      return currentUser;\n    }\n  \n    //Vérification qu'il y a un utilisateur connecté\n    function isLoggedIn() {\n      if(currentUser) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    \n    //création de compte puis connexion automatique\n    function register(user){\n      var deferred = $q.defer();\n     users.create({\n      email: user.email,\n      password: user.password,\n      name: user.name,\n      lastname: user.lastname,\n      biography: user.bio\n    },\n    function(user) {\n      currentUser = user;\n      deferred.resolve();\n    }, \n    function(error) {\n      deferred.reject(error);\n    });\n     return deferred.promise;\n   }\n   \n    //connexion d'un utilisateur\n    function login(email, password){\n      console.log('test');\n      var deferred = $q.defer();\n      users.login({\n        email: email,\n        password : password\n      },\n      function(user){\n        console.log(user);\n        console.log(\"1\");\n        currentUser = user;\n        deferred.resolve();\n      },\n      function(err){\n        console.log(err);\n        console.log(\"2\");\n        deferred.reject();\n      });\n      return deferred.promise;\n    }\n    \n    //déconnexion de l'utilisateur\n    function logout(){\n      users.logout();\n      currentUser = false;\n    }\n    \n    return ({\n      currentUser : currentUser,\n      isLoggedIn: isLoggedIn,\n      login: login,\n      register: register,\n      getUser : getUser,\n      logout: logout\n    });\n  }\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, $rootScope, $state, $timeout, users) {\n\n    users.loggedin(function(user){\n      $rootScope.currentUser = user;\n    });\n    $rootScope.$on(\"$stateChangeStart\", function (event, toState, toParams, fromState, fromParams) {\n      users.loggedin(function(data){\n        if(data.user){\n          $rootScope.currentUser = data.user;\n        }else if(toState.name != \"register\"){\n           $state.go('login');\n        }\n      });\n      \n      // $rootScope.currentUser = {\n      //   \"id\": 3,\n      //   \"email\": \"isadora\",\n      //   \"name\": \"Isadora2\",\n      //   \"lastname\": \"Bartkowiak\",\n      //   \"biography\": \"dsjmosdv de la merde\",\n      //   \"createdAt\": \"2017-02-04T23:25:34.882Z\",\n      //   \"updatedAt\": \"2017-02-04T23:25:34.882Z\"\n      // };\n      \n      // $rootScope.currentUser = {\n      //   \"id\": 26,\n      //   \"email\": \"pierre@mail.com\",\n      //   \"name\": \"Pierre26\",\n      //   \"lastname\": \"Bartkowiak\",\n      //   \"biography\": \"dsjmosdv de la merde\",\n      //   \"createdAt\": \"2017-02-04T23:25:34.882Z\",\n      //   \"updatedAt\": \"2017-02-04T23:25:34.882Z\"\n      // };\n    });\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n  .module('events')\n  .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider, $locationProvider) {\n    $stateProvider\n    .state('home', {\n      url: '/',\n      templateUrl: 'app/main/main.html',\n      controller: 'MainController',\n      controllerAs: 'main'\n    })\n    .state('login', {\n      url: '/se-connecter/',\n      templateUrl: 'app/login/login.html',\n      controller: 'LoginController',\n      controllerAs: 'login'\n    })\n    .state('register', {\n      url: '/creer-un-compte/',\n      templateUrl: 'app/login/register.html',\n      controller: 'RegisterController',\n      controllerAs: 'register'\n    })\n    .state('addevent', {\n      url: '/ajouter-evenement/',\n      templateUrl: 'app/events/add-event.html',\n      controller: 'EventController',\n      controllerAs: 'EventCtrl'\n    })\n    .state('singleevent', {\n      url: '/evenement/:id',\n      templateUrl: 'app/events/single-event.html',\n      controller: 'SingleEventController',\n      controllerAs: 'single'\n    })\n    .state('editevent', {\n      url: '/evenement/modifier/:id',\n      templateUrl: 'app/events/edit-event.html',\n      controller: 'EditEventController',\n      controllerAs: 'edit'\n    })\n    .state('closeevent', {\n      url: '/evenement/cloturer/:id',\n      templateUrl: 'app/events/close-event.html',\n      controller: 'CloseEventController',\n      controllerAs: 'close'\n    })\n    .state('profile',{\n     url:'/profile/',\n     templateUrl: 'app/profile/profile.html',\n     controller:'ProfileCtrl',\n     controllerAs:'profile'\n   });\n\n    $urlRouterProvider.otherwise('/');\n    $locationProvider.html5Mode(true);\n\n  }\n\n})();\n\n/* global moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('events')\n    .constant('moment', moment);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('events')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $mdDateLocaleProvider, moment) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n    \n    moment.locale('fr');\n\n\n    //Set les options des toasts\n    toastrConfig.timeOut = 3000;\n    toastrConfig.showDuration= 1000;\n    toastrConfig.positionClass = 'toast-bottom-right';\n    toastrConfig.newestOnTop =  true;\n\n    \n    //Set les options des input calendrier\n    // $mdDateLocaleProvider.months = ['janvier', 'février', 'mars', 'avril', 'mai', 'juin', 'juillet', 'août', 'septembre', 'octobre', 'novembre', 'décembre'];\n    // $mdDateLocaleProvider.shortMonths = ['Jan', 'Fev', 'Mar', 'Avr', 'Mai', 'Jun', 'Jui', 'Aoû', 'Sep', 'Oct', 'Nov', 'Déc'];\n    // $mdDateLocaleProvider.days = ['Lundi', 'Mardi', 'Mercredi', 'Jeudi', 'Vendredi', 'Samedi', 'Dimanche'];\n    // $mdDateLocaleProvider.shortDays = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n    // $mdDateLocaleProvider.firstDayOfWeek = 1;\n    // $mdDateLocaleProvider.formatDate = function(date) {\n    //   var m = moment(date);\n    //   return m.isValid() ? m.format('L') : '';\n    // };\n    \n  }\n})();\n\nangular.module(\"events\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/main/main.html\",\"<navbar bloctitle=\\\"\\'Bonjour \\'+currentUser.name\\\" subtitle=\\\"\\'Lorem ipsum dolor sit amet ut primum caetere doloris !\\'\\\"></navbar><nav class=tab><span class=tab-link ng-class=\\\"{\\'active\\': main.activeTab == \\'all\\'}\\\" ng-click=main.showAll()>Tous</span> <span class=tab-link ng-class=\\\"{\\'active\\': main.activeTab == \\'user\\'}\\\" ng-click=main.showUser()>Mes évènements</span> <span class=tab-link ng-class=\\\"{\\'active\\': main.activeTab == \\'participation\\'}\\\" ng-click=main.showParticipations()>Mes participations</span> <span class=tab-link ng-class=\\\"{\\'active\\': main.activeTab == \\'done\\'}\\\" ng-click=main.showDone()>Terminé</span></nav><section class=eventlist><div class=row><p class=eventlist-count ng-if=\\\"currentEvent.length > 0\\\">{{currentEvent.length}} évènements</p><p class=eventlist-count ng-if=\\\"main.activeTab != \\'participation\\' && currentEvent.length == 0\\\">Pas d\\'évènement</p><div ng-if=\\\"main.activeTab != \\'participation\\'\\\" ng-repeat=\\\"event in currentEvent=(main.events | filter:main.filter | orderBy: \\'-updatedAt\\')\\\" class=col-md-4><a ng-href=/evenement/{{event.id}} class=eventlist-content ng-class=\\\"{closed: event.closed}\\\"><span class=eventlist-imgwrapper><img src=https://media.timeout.com/images/101705313/image.jpg alt=\\\"\\\" class=eventlist-img><p class=eventlist-slot ng-if=!event.closed>{{event.slots.length}} créneaux disponibles</p><p class=eventlist-slot ng-if=event.closed>Evènement cloturé</p></span><ul class=\\\"eventlist-info list-inline\\\"><li class=eventlist-place><i class=\\\"icon-marker eventlist-place-icon\\\"></i> {{event.place}}</li><!-- <li class=\\\"eventlist-slot\\\">{{event.slots.length}} créneaux</li> --></ul><span class=eventlist-text><h2 class=eventlist-title>{{event.title}}</h2><p class=eventlist-author>Crée par {{event.owner.name}} {{event.owner.lastname}}</p><p class=eventlist-description>{{event.description}}</p></span></a><div class=eventlist-control ng-if=\\\"event.owner.id == currentUser.id && !event.closed\\\"><a class=eventlist-edit ng-href=/evenement/modifier/{{event.id}} class=\\\"btn btn-primary\\\">Modifier</a> <a class=eventlist-close ng-href=/evenement/cloturer/{{event.id}} class=\\\"btn btn-primary\\\">Clôturer</a></div></div><!-- si onglet participation --><div ng-if=\\\"main.activeTab == \\'participation\\'\\\" ng-repeat=\\\"event in copyEvent=(main.events | myParticipation | orderBy: \\'-updatedAt\\')\\\" class=col-md-4><a ng-href=/evenement/{{event.id}} class=eventlist-content><span class=eventlist-imgwrapper><img src=https://media.timeout.com/images/101705313/image.jpg alt=\\\"\\\" class=eventlist-img><p class=eventlist-slot>{{event.slots.length}} créneaux disponibles</p></span><ul class=\\\"eventlist-info list-inline\\\"><li class=eventlist-place><i class=\\\"icon-marker eventlist-place-icon\\\"></i> {{event.place}}</li><!-- <li class=\\\"eventlist-slot\\\">{{event.slots.length}} créneaux</li> --></ul><span class=eventlist-text><h2 class=eventlist-title>{{event.title}}</h2><p class=eventlist-author>Crée par {{event.owner.name}} {{event.owner.lastname}}</p><p class=eventlist-description>{{event.description}}</p></span></a><div class=eventlist-control ng-if=\\\"event.owner.id == currentUser.id && !event.closed\\\"><a class=eventlist-edit ng-href=/evenement/modifier/{{event.id}} class=\\\"btn btn-primary\\\">Modifier</a> <a class=eventlist-close ng-href=/evenement/cloturer/{{event.id}} class=\\\"btn btn-primary\\\">Clôturer</a></div></div><p class=text-center ng-show=\\\"!copyEvent.length && main.activeTab == \\'participation\\'\\\">Vous n\\'avez pas encore de participations enregistrées</p></div></section>\");\n$templateCache.put(\"app/events/add-event.html\",\"<navbar bloctitle=\\\"\\'Ajouter un évènement\\'\\\" subtitle=\\\"\\'Lorem ipsum dolor sit amet ut primum!\\'\\\"></navbar><div class=\\\"form-container addevent\\\"><div class=\\\"box form-box\\\"><form name=addEventForm class=row><!-- ****** INFO ************************** --><h3 class=box-title>Infos</h3><!-- champ titre --><div class=\\\"box-field col-sm-6\\\"><label>Titre</label><input required ng-model=EventCtrl.event.title></div><!-- champ lieu --><div class=\\\"box-field col-sm-6\\\"><label>Lieu</label><input required ng-model=EventCtrl.event.place></div><!-- champ description --><div class=\\\"box-field col-sm-12\\\"><label>Description</label><textarea ng-model=EventCtrl.event.description rows=5></textarea></div><!-- ****** CRENEAUX ************************** --><h3 class=box-title>Créneaux</h3><div class=col-sm-12><label>Date(s)</label></div><!-- 1er champ datepicker --><div class=addevent-slot><div class=\\\"box-field col-xs-10\\\"><i class=\\\"icon-calendar input-icon\\\"></i> <input class=\\\"input icon\\\" mdc-datetime-picker=\\\"\\\" date=true time=true type=text id=datetime show-todays-date=true format=\\\"DD/MM/YYYY HH:mm\\\" min-date=date ng-model=EventCtrl.dates[0].date class=md-input week-start=1 lang=fr cancel-text=Annuler today-text=\\\"Aujourd\\'hui\\\"></div><div class=\\\"col-xs-2 addevent-slot-btn\\\"><span class=\\\"btn btn-plus\\\" ng-click=EventCtrl.addField()><i class=icon-plus></i></span></div></div><!-- repeater --><div class=addevent-slot ng-repeat=\\\"field in EventCtrl.field track by $index | limitTo:4\\\"><!-- bouton input --><div class=\\\"box-field col-xs-10\\\"><i class=\\\"icon-calendar input-icon\\\"></i> <input class=\\\"input icon\\\" mdc-datetime-picker=\\\"\\\" date=true time=true type=text id=datetime placeholder=Date show-todays-date=\\\"\\\" format=\\\"DD/MM/YYYY HH:mm\\\" min-date=date ng-model=EventCtrl.dates[field.id].date class=md-input week-start=1 lang=fr cancel-text=Annuler today-text=\\\"Aujourd\\'hui\\\"></div><!-- bouton supprimer --><div class=\\\"col-xs-2 addevent-slot-btn\\\"><span class=\\\"btn btn-plus\\\" ng-click=EventCtrl.removeField(field)><i class=icon-trash></i></span></div></div><!-- bouton validation --> <button ng-click=EventCtrl.addEvent(addEventForm) class=\\\"btn btn-primary box-btn\\\">Valider</button></form></div></div>\");\n$templateCache.put(\"app/events/close-event.html\",\"<navbar bloctitle=\\\"\\'Clôturer \\'+close.event.title\\\" subtitle=\\\"\\'Choisissez le créneau préféré parmi la liste\\'\\\"></navbar><div class=\\\"form-container closevent\\\" id=closevent><div class=\\\"box form-box\\\"><form name=closeEventForm class=row><h3 class=box-title>Créneaux disponibles</h3><ul class=\\\"slots list-inline\\\" ng-if=\\\"close.event.slots.length > 0\\\"><li ng-repeat=\\\"slot in close.event.slots | orderBy:\\'-users\\' track by $index \\\" class=slots-item ng-class=\\\"{\\'active\\': close.containsObject(currentUser, slot.users)}\\\"><div class=slots-date><p class=slots-day>{{slot.date | cleanDate: \\'D\\'}}</p><p class=slots-month>{{slot.date | cleanDate: \\'MMMM\\' | limitTo:3}}</p><p class=slots-year>{{slot.date | cleanDate: \\'Y\\'}}</p></div><div class=slots-infos><div class=slots-infos-content><p class=slots-hour><i class=icon-clock></i> {{slot.date | cleanDate: \\'kk\\'}}h</p><p class=slots-count>{{slot.users.length}} personne(s)</p><div class=slots-users><div class=slots-users-item ng-repeat=\\\"user in slot.users\\\"><img class=slots-users-img src=/assets/images/user.jpg alt={{user.name}}><p class=slots-users-name>{{user.name}}</p></div></div></div></div><div class=slots-checkbox><input type=checkbox ng-init=\\\"$first && close.recommandation ? close.selection[slot.id] = true : \\'\\'\\\" ng-click=\\\"\\\" ng-change=close.changeSelection(slot.id) ng-model=close.selection[slot.id]></div><div ng-if=\\\"$first && close.recommandation\\\" ng-show=close.showHelp class=slots-recommandation><p>Nous vous recommandons ce créneau pour votre évènement</p><i class=\\\"icon-cross slots-recommandation-close\\\" ng-click=\\\"close.showHelp = !close.showHelp\\\"></i></div></li></ul><!-- bouton validation --> <button ng-click=close.closeEvent($event) class=\\\"btn btn-primary box-btn\\\">Valider</button></form></div></div>\");\n$templateCache.put(\"app/events/edit-event.html\",\"<navbar bloctitle=\\\"\\'Modifier l\\\\\\'évenement\\'\\\" subtitle=edit.event.title></navbar><div class=\\\"form-container editevent\\\" id=editevent><div class=\\\"box form-box\\\"><form name=editEventForm class=row><!-- ****** INFO ************************** --><h3 class=box-title>Infos</h3><!-- champ titre --><div class=\\\"box-field col-sm-6\\\"><label>Titre</label><input required ng-model=edit.event.title></div><!-- champ lieu --><div class=\\\"box-field col-sm-6\\\"><label>Lieu</label><input required ng-model=edit.event.place></div><!-- champ description --><div class=\\\"box-field col-sm-12\\\"><label>Description</label><textarea ng-model=edit.event.description rows=5></textarea></div><!-- ****** CRENEAUX ************************** --><h3 class=box-title>Créneaux</h3><div class=col-sm-12><label>Date(s)</label></div><!-- 1er champ datepicker --><div class=addevent-slot><div class=\\\"box-field col-xs-10\\\"><i class=\\\"icon-calendar input-icon\\\"></i> <input class=\\\"input icon\\\" mdc-datetime-picker=\\\"\\\" date=true time=true type=text id=datetime placeholder=Date show-todays-date=\\\"\\\" format=\\\"DD/MM/YYYY HH:mm\\\" min-date=date ng-model=edit.dates[0].date class=md-input week-start=1 lang=fr cancel-text=Annuler today-text=\\\"Aujourd\\'hui\\\"></div><div class=\\\"col-xs-2 addevent-slot-btn\\\"><span class=\\\"btn btn-plus\\\" ng-click=edit.addField()><i class=icon-plus></i></span></div></div><!-- repeater --><div class=addevent-slot ng-repeat=\\\"field in edit.field\\\"><!-- bouton input --><div class=\\\"box-field col-xs-10\\\"><i class=\\\"icon-calendar input-icon\\\"></i> <input class=\\\"input icon\\\" mdc-datetime-picker=\\\"\\\" date=true time=true type=text id=datetime placeholder=Date show-todays-date=\\\"\\\" format=\\\"DD/MM/YYYY HH:mm\\\" min-date=\\\"\\\" ng-model=edit.dates[field.id].date class=md-input week-start=1 lang=fr cancel-text=Annuler today-text=\\\"Aujourd\\'hui\\\"></div><!-- bouton supprimer --><div class=\\\"col-xs-2 addevent-slot-btn\\\"><span class=\\\"btn btn-plus\\\" ng-click=edit.removeField(field)><i class=icon-trash></i></span></div></div><!-- bouton control --> <button ng-click=edit.deleteEvent($event) class=\\\"btn btn-primary box-btn\\\">Supprimer</button> <button ng-click=edit.updateEvent(editEventForm) class=\\\"btn btn-primary box-btn\\\">Enregistrer</button></form></div></div>\");\n$templateCache.put(\"app/events/single-event.html\",\"<navbar bloctitle=single.event.title subtitle=single.event.description></navbar><div class=\\\"form-container single\\\" id=single><div class=\\\"box form-box\\\"><p class=single-place><i class=\\\"icon-marker eventlist-place-icon\\\"></i> {{single.event.place}}</p><p class=single-author><i class=icon-head></i> {{single.event.owner.name}} {{single.event.owner.lastname}}</p><!-- Si l\\'evenement est cloturé --><div class=\\\"slots list-inline\\\" ng-if=single.event.closed><h3 class=box-title>Créneau choisi</h3><p class=single-closed>Evènement cloturé</p><li ng-repeat=\\\"slot in single.event.slots | filter: {choosen:true} track by $index \\\" class=slots-item><div class=slots-date><p class=slots-day>{{slot.date | cleanDate: \\'D\\'}}</p><p class=slots-month>{{slot.date | cleanDate: \\'MMMM\\' | limitTo:3}}</p><p class=slots-year>{{slot.date | cleanDate: \\'Y\\'}}</p></div><div class=slots-infos><div class=slots-infos-content><p class=slots-hour><i class=icon-clock></i> {{slot.date | cleanDate: \\'HH:mm\\'}}</p><p class=slots-count>{{slot.users.length}} personne(s)</p><div class=slots-users><div class=slots-users-item ng-repeat=\\\"user in slot.users\\\"><img class=slots-users-img src=/assets/images/user.jpg alt={{user.name}}><p class=slots-users-name>{{user.name}}</p></div></div></div></div></li></div><!-- S\\'il n\\'est pas cloturé --><form name=closeEventForm class=row ng-if=!single.event.closed><h3 class=box-title>Créneaux proposés</h3><ul class=\\\"slots list-inline\\\" ng-if=\\\"single.event.slots.length > 0\\\"><li ng-repeat=\\\"slot in single.event.slots | orderBy: \\'-date\\' track by $index\\\" class=slots-item ng-class=\\\"{\\'active\\': single.containsObject(currentUser, slot.users)}\\\"><div class=slots-date><p class=slots-day>{{slot.date | cleanDate: \\'D\\'}}</p><p class=slots-month>{{slot.date | cleanDate: \\'MMMM\\' | limitTo:3}}</p><p class=slots-year>{{slot.date | cleanDate: \\'Y\\'}}</p></div><div class=slots-infos><div class=slots-infos-content><p class=slots-hour><i class=icon-clock></i> {{slot.date | cleanDate: \\'HH:mm\\'}}</p><p class=slots-count>{{slot.users.length}} personne(s)</p><div class=slots-users><div class=slots-users-item ng-repeat=\\\"user in slot.users\\\"><img class=slots-users-img src=/assets/images/user.jpg alt={{user.name}}><p class=slots-users-name>{{user.name}}</p></div></div></div></div><div class=slots-checkbox><input type=checkbox ng-checked=\\\"single.containsObject(currentUser, slot.users)\\\" ng-click=single.addUserParticipation(slot)></div></li></ul></form></div></div>\");\n$templateCache.put(\"app/profile/profile.html\",\"<navbar bloctitle=\\\"\\'Informations Utilisateur\\'\\\" subtitle=\\\"\\'Lorem ipsum dolor sit amet ut primum!\\'\\\"></navbar><div class=\\\"form-container profile\\\"><section class=\\\"box form-box\\\"><h3 class=box-subtitle>Vous pouvez modifier vos informations</h3><form name=registerForm class=row><!-- champ nom --><div class=\\\"box-field col-sm-6\\\"><label>Nom</label><input required ng-model=profile.user.lastname></div><!-- champ prenom --><div class=\\\"box-field col-sm-6\\\"><label>Prénom</label><input required ng-model=profile.user.name></div><!-- champ bio --><div class=\\\"box-field col-sm-12\\\"><label>Bio</label><textarea ng-model=profile.user.biography></textarea></div><!-- champ email (login) --><div class=\\\"box-field col-sm-12\\\"><label>Adresse e-mail</label><input type=email name=email ng-pattern=/^.+@.+\\\\..+$/ required ng-model=profile.user.email><div ng-messages=registerForm.email.$error role=alert><p ng-message-exp=\\\"[\\'pattern\\']\\\">E-mail invalide</p></div></div><!-- champ mdp --><div class=\\\"box-field col-sm-12\\\"><label>Nouveau mot de passe</label><input type=password ng-model=profile.user.newPassword name=newPassword></div><!-- champ mdp --><div class=\\\"box-field col-sm-12\\\"><label>Confirmation mot de passe</label><input compare-to=profile.user.newPassword type=password ng-model=profile.user.confirmNewPassword name=confirmNewPassword><div ng-show=registerForm.confirmNewPassword.$error.compareTo>Les mots de passe doivent correspondrent</div></div><button ng-click=profile.saveChanges(registerForm) class=\\\"btn btn-primary box-btn\\\">Enregistrer</button></form></section></div>\");\n$templateCache.put(\"app/login/login.html\",\"<!-- navigation se connecter/créer un compte --><div class=connexion-nav><img class=logo src=/assets/images/logo.png alt=\\\"Logo Wesh\\\"><nav><a class=\\\"connexion-nav-link active\\\" href=/se-connecter>Se connecter</a> <a class=connexion-nav-link href=/creer-un-compte/ >Créer un compte</a></nav></div><!-- bloc de connexion --><section class=\\\"box login\\\"><h1 class=box-title>Se connecter</h1><h2 class=box-subtitle>Lorem ipsum dolor sit amet</h2><div class=\\\"box-field col-xs-12\\\"><i class=\\\"icon-mail input-icon\\\"></i> <input class=\\\"input icon\\\" required type=text ng-model=login.email placeholder=\\\"Adresse e-mail\\\"></div><div class=\\\"box-field col-xs-12\\\"><i class=\\\"icon-unlock input-icon\\\"></i> <input class=\\\"input icon\\\" required type=password placeholder=\\\"Mot de passe\\\" ng-model=login.password></div><button ng-click=login.authentificate() class=\\\"btn btn-primary box-btn\\\">Se connecter</button></section>\");\n$templateCache.put(\"app/login/register.html\",\"<!-- navigation se connecter/créer un compte --><div class=connexion-nav><img class=logo src=/assets/images/logo.png alt=\\\"Logo Wesh\\\"><nav><a class=connexion-nav-link href=/se-connecter/ >Se connecter</a> <a class=\\\"connexion-nav-link active\\\" href=/creer-un-compte/ >Créer un compte</a></nav></div><!-- bloc de connexion --><section class=\\\"box register\\\"><h1 class=box-title>Créer un compte</h1><h2 class=box-subtitle>Veuillez remplir le formulaire suivant</h2><form name=registerForm class=row><!-- champ nom --><div class=\\\"box-field col-sm-6\\\"><label>Nom</label><input required ng-model=register.user.lastname></div><!-- champ prenom --><div class=\\\"box-field col-sm-6\\\"><label>Prénom</label><input required ng-model=register.user.name></div><!-- champ bio --><div class=\\\"box-field col-sm-12\\\"><label>Bio</label><textarea ng-model=register.user.bio></textarea></div><!-- champ email (login) --><div class=\\\"box-field col-sm-12\\\"><label>Adresse e-mail</label><input type=email name=email ng-pattern=/^.+@.+\\\\..+$/ required ng-model=register.user.email><div ng-messages=registerForm.email.$error role=alert><p ng-message-exp=\\\"[\\'pattern\\']\\\">E-mail invalide</p></div></div><!-- champ mdp --><div class=\\\"box-field col-sm-12\\\"><label>Mot de passe</label><input type=password required ng-model=register.user.password></div><button ng-click=register.createAccount() class=\\\"btn btn-primary box-btn\\\">Créer un compte</button></form></section>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<header class=header><div class=header-right><a ng-href=/ class=header-home><img class=\\\"logo header-right-logo\\\" src=/assets/images/logo-white.png alt=\\\"Logo Wesh\\\"></a><nav class=header-nav><a ng-href=/ ng-class=\\\"{ active: nav.currentState == \\'home\\'}\\\">Accueil</a> <a ng-href=/ajouter-evenement/ ng-class=\\\"{ active: nav.currentState == \\'addevent\\'}\\\">Ajouter event</a></nav></div><ul class=\\\"header-user list-inline\\\"><li class=header-user-profile><a ng-href=/profile/ >{{nav.user.name}}</a></li><li class=header-user-alert><i class=\\\"icon icon-notifications_none header-notif-btn\\\" ng-click=\\\"nav.notifPanel = !nav.notifPanel\\\" ng-class=\\\"{active: nav.notifPanel}\\\"><span class=header-notif-count ng-if=\\\"nav.notificationsCount > 0\\\">{{nav.notificationsCount}}</span></i><div class=header-notif ng-show=nav.notifPanel><p class=header-notif-title>Notifications</p><div class=header-notif-content><div class=header-notif-el ng-repeat=\\\"notif in nav.notifications | orderBy:\\'-createdAt\\'\\\" ng-class=\\\"{new: !notif.seen}\\\"><p class=header-notif-txt>{{notif.content}}</p><p class=header-notif-date>{{notif.createdAt | relativeDate}}</p><span ng-if=!notif.seen ng-click=nav.readNotif(notif.id) class=header-notif-read>OK</span></div><div class=header-notif-el ng-if=\\\"nav.notifications.length == 0\\\"><p class=header-notif-txt>Il n\\'y pas encore de notifications</p></div></div></div></li><li class=header-user-logout><i class=\\\"icon icon-power\\\" ng-click=nav.logout()></i></li></ul><div class=header-text><h1 class=header-title>{{nav.bloctitle}}</h1><p class=header-subtitle>{{nav.subtitle}}</p><a class=header-add ng-if=\\\"nav.currentState == \\'home\\'\\\" ng-href=/ajouter-evenement/ ><i class=icon-plus></i></a></div></header>\");}]);"],"sourceRoot":"/source/"}